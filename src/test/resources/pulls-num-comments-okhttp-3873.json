[
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/169546081",
    "pull_request_review_id": 98087486,
    "id": 169546081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTU0NjA4MQ==",
    "diff_hunk": "@@ -260,8 +260,16 @@ private void connectSocket(int connectTimeout, int readTimeout, Call call,\n   private void establishProtocol(ConnectionSpecSelector connectionSpecSelector, Call call,\n       EventListener eventListener) throws IOException {\n     if (route.address().sslSocketFactory() == null) {\n-      protocol = Protocol.HTTP_1_1;\n       socket = rawSocket;\n+\n+      // this implementation takes the \"prior knowledge\" approach to the spec\n+      // https://tools.ietf.org/html/rfc7540#section-3.4\n+      if (route.address().protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java",
    "position": null,
    "original_position": 9,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "d062f78e5570219a5dec8d90fca92fdc5073231b",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I suggest we change \r\n\r\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/OkHttpClient.java#L854-L856\r\n\r\nTo allow H2C on it's own, but only on it's own, no fallback to HTTP/1.1.",
    "created_at": "2018-02-21T06:42:14Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r169546081",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/169546081"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r169546081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/169546081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 264,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170012601",
    "pull_request_review_id": 98632194,
    "id": 170012601,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDAxMjYwMQ==",
    "diff_hunk": "@@ -260,8 +260,16 @@ private void connectSocket(int connectTimeout, int readTimeout, Call call,\n   private void establishProtocol(ConnectionSpecSelector connectionSpecSelector, Call call,\n       EventListener eventListener) throws IOException {\n     if (route.address().sslSocketFactory() == null) {\n-      protocol = Protocol.HTTP_1_1;\n       socket = rawSocket;\n+\n+      // this implementation takes the \"prior knowledge\" approach to the spec\n+      // https://tools.ietf.org/html/rfc7540#section-3.4\n+      if (route.address().protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java",
    "position": null,
    "original_position": 9,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "d062f78e5570219a5dec8d90fca92fdc5073231b",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done. This ended up cleaning up some of the logic in the establishment.",
    "created_at": "2018-02-22T16:21:44Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170012601",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170012601"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170012601"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170012601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 264,
    "side": "RIGHT",
    "in_reply_to_id": 169546081
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170045800",
    "pull_request_review_id": 98671669,
    "id": 170045800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDA0NTgwMA==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);\n+\n+      if (uniqueProtocols.contains(Protocol.H2C) && uniqueProtocols.size() > 1) {\n+        // when using h2c prior knowledge, no other protocol should be supported.\n+        throw new IllegalArgumentException(\"protocols containing h2c cannot use other protocols:\"\n+                + uniqueProtocols);\n+      } else if (!uniqueProtocols.contains(Protocol.HTTP_1_1)) {",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 26,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "bug: this needs to check if uniqueProtocols does not contain H2c",
    "created_at": "2018-02-22T18:09:50Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170045800",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170045800"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170045800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170045800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 855,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170045900",
    "pull_request_review_id": 98671804,
    "id": 170045900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDA0NTkwMA==",
    "diff_hunk": "@@ -61,6 +61,12 @@\n    */\n   HTTP_2(\"h2\"),\n \n+  /**\n+   * Cleartext implementation of HTTP2. This enumeration exists for the \"prior knowledge\" upgrade\n+   * semantic supported by the protocol.\n+   */\n+  H2C(\"h2c\"),",
    "path": "okhttp/src/main/java/okhttp3/Protocol.java",
    "position": null,
    "original_position": 8,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "bug: this needs to be added to the static get method.",
    "created_at": "2018-02-22T18:10:16Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170045900",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170045900"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170045900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170045900/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170073994",
    "pull_request_review_id": 98704753,
    "id": 170073994,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDA3Mzk5NA==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);\n+\n+      if (uniqueProtocols.contains(Protocol.H2C) && uniqueProtocols.size() > 1) {\n+        // when using h2c prior knowledge, no other protocol should be supported.\n+        throw new IllegalArgumentException(\"protocols containing h2c cannot use other protocols:\"\n+                + uniqueProtocols);\n+      } else if (!uniqueProtocols.contains(Protocol.HTTP_1_1)) {",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 26,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is checked implicitly via the if case above",
    "created_at": "2018-02-22T19:51:28Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170073994",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170073994"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170073994"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170073994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 855,
    "side": "RIGHT",
    "in_reply_to_id": 170045800
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170075162",
    "pull_request_review_id": 98706056,
    "id": 170075162,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDA3NTE2Mg==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 20,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@swankjesse has stated a preference for LinkedHashSet makes these a lot more predictable in tests, e.g. checking the exception message.  But generally you could probably just check the contains(H2C) and size > 1 on the list and fold in duplicates as bad input.  But this isn't super critical code path, so that's minor.",
    "created_at": "2018-02-22T19:55:17Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170075162",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170075162"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170075162"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170075162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 849,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170076152",
    "pull_request_review_id": 98707209,
    "id": 170076152,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDA3NjE1Mg==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);\n+\n+      if (uniqueProtocols.contains(Protocol.H2C) && uniqueProtocols.size() > 1) {\n+        // when using h2c prior knowledge, no other protocol should be supported.\n+        throw new IllegalArgumentException(\"protocols containing h2c cannot use other protocols:\"\n+                + uniqueProtocols);\n+      } else if (!uniqueProtocols.contains(Protocol.HTTP_1_1)) {\n+        // Validate that the list has everything we require and nothing we forbid.\n+        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \"\n+                + uniqueProtocols);\n       }\n-      if (protocols.contains(Protocol.HTTP_1_0)) {\n-        throw new IllegalArgumentException(\"protocols must not contain http/1.0: \" + protocols);\n+      if (uniqueProtocols.contains(Protocol.HTTP_1_0)) {\n+        throw new IllegalArgumentException(\"protocols must not contain http/1.0: \"\n+                + uniqueProtocols);\n       }\n-      if (protocols.contains(null)) {\n+      if (uniqueProtocols.contains(null)) {\n         throw new IllegalArgumentException(\"protocols must not contain null\");\n       }\n \n       // Remove protocols that we no longer support.\n-      protocols.remove(Protocol.SPDY_3);\n+      uniqueProtocols.remove(Protocol.SPDY_3);\n \n       // Assign as an unmodifiable list. This is effectively immutable.\n-      this.protocols = Collections.unmodifiableList(protocols);\n+      this.protocols = Collections.unmodifiableList(new ArrayList<>(uniqueProtocols));",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 48,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think changing the selected protocol because of hashing could affect the ALPN selection IIRC.  Not so much an issue without SPDY, but undesirable.",
    "created_at": "2018-02-22T19:58:44Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170076152",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170076152"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170076152"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170076152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 872,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170141460",
    "pull_request_review_id": 98785031,
    "id": 170141460,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDE0MTQ2MA==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 20,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch. -It wasn't super clear if the list of protocols was treated as a prioritized.- Adding to preserve ordering since it's in the Javadoc that order is expected to be preserved.",
    "created_at": "2018-02-23T01:08:33Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170141460",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170141460"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170141460"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170141460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 849,
    "side": "RIGHT",
    "in_reply_to_id": 170075162
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170142027",
    "pull_request_review_id": 98785621,
    "id": 170142027,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDE0MjAyNw==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);\n+\n+      if (uniqueProtocols.contains(Protocol.H2C) && uniqueProtocols.size() > 1) {\n+        // when using h2c prior knowledge, no other protocol should be supported.\n+        throw new IllegalArgumentException(\"protocols containing h2c cannot use other protocols:\"\n+                + uniqueProtocols);\n+      } else if (!uniqueProtocols.contains(Protocol.HTTP_1_1)) {\n+        // Validate that the list has everything we require and nothing we forbid.\n+        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \"\n+                + uniqueProtocols);\n       }\n-      if (protocols.contains(Protocol.HTTP_1_0)) {\n-        throw new IllegalArgumentException(\"protocols must not contain http/1.0: \" + protocols);\n+      if (uniqueProtocols.contains(Protocol.HTTP_1_0)) {\n+        throw new IllegalArgumentException(\"protocols must not contain http/1.0: \"\n+                + uniqueProtocols);\n       }\n-      if (protocols.contains(null)) {\n+      if (uniqueProtocols.contains(null)) {\n         throw new IllegalArgumentException(\"protocols must not contain null\");\n       }\n \n       // Remove protocols that we no longer support.\n-      protocols.remove(Protocol.SPDY_3);\n+      uniqueProtocols.remove(Protocol.SPDY_3);\n \n       // Assign as an unmodifiable list. This is effectively immutable.\n-      this.protocols = Collections.unmodifiableList(protocols);\n+      this.protocols = Collections.unmodifiableList(new ArrayList<>(uniqueProtocols));",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 48,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah. I think that change went a little too far. Going to revert back to using just the list and suffer the minimal performance cost.",
    "created_at": "2018-02-23T01:12:08Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170142027",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170142027"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170142027"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170142027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 872,
    "side": "RIGHT",
    "in_reply_to_id": 170076152
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170142582",
    "pull_request_review_id": 98786260,
    "id": 170142582,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDE0MjU4Mg==",
    "diff_hunk": "@@ -844,24 +846,30 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      */\n     public Builder protocols(List<Protocol> protocols) {\n       // Create a private copy of the list.\n-      protocols = new ArrayList<>(protocols);\n-\n-      // Validate that the list has everything we require and nothing we forbid.\n-      if (!protocols.contains(Protocol.HTTP_1_1)) {\n-        throw new IllegalArgumentException(\"protocols doesn't contain http/1.1: \" + protocols);\n+      final Set<Protocol> uniqueProtocols = new HashSet<>(protocols);\n+\n+      if (uniqueProtocols.contains(Protocol.H2C) && uniqueProtocols.size() > 1) {\n+        // when using h2c prior knowledge, no other protocol should be supported.\n+        throw new IllegalArgumentException(\"protocols containing h2c cannot use other protocols:\"\n+                + uniqueProtocols);\n+      } else if (!uniqueProtocols.contains(Protocol.HTTP_1_1)) {",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 26,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually it's not. In the event that someone specifies only H2C, then the second if check evaluates to false, triggering this else if. Caught it in one of the unit tests I was writing.",
    "created_at": "2018-02-23T01:15:54Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170142582",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170142582"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170142582"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170142582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 855,
    "side": "RIGHT",
    "in_reply_to_id": 170045800
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170148107",
    "pull_request_review_id": 98792307,
    "id": 170148107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDE0ODEwNw==",
    "diff_hunk": "@@ -61,6 +61,12 @@\n    */\n   HTTP_2(\"h2\"),\n \n+  /**\n+   * Cleartext implementation of HTTP2. This enumeration exists for the \"prior knowledge\" upgrade\n+   * semantic supported by the protocol.\n+   */\n+  H2C(\"h2c\"),",
    "path": "okhttp/src/main/java/okhttp3/Protocol.java",
    "position": null,
    "original_position": 8,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "c915f314f3d88d2379c2ea5b8b212a408fe3fdf6",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Resolved",
    "created_at": "2018-02-23T01:56:52Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170148107",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170148107"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170148107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170148107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT",
    "in_reply_to_id": 170045900
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170372091",
    "pull_request_review_id": 99057540,
    "id": 170372091,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3MjA5MQ==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static okhttp3.TestUtil.defaultClient;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test H2C, the cleartext implementation of HTTP/2.\n+ *\n+ * @author jpitz",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverH2CTest.java",
    "position": null,
    "original_position": 17,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "strip author tags",
    "created_at": "2018-02-23T21:26:24Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170372091",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170372091"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170372091"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170372091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170372876",
    "pull_request_review_id": 99057540,
    "id": 170372876,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3Mjg3Ng==",
    "diff_hunk": "@@ -124,6 +124,9 @@ public Http2Codec(OkHttpClient client, Interceptor.Chain chain, StreamAllocation\n   @Override public Response.Builder readResponseHeaders(boolean expectContinue) throws IOException {\n     List<Header> headers = stream.takeResponseHeaders();\n     Response.Builder responseBuilder = readHttp2HeadersList(headers);\n+    if (client.protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 4,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why set it here and not inside readHttp2HeadersList?",
    "created_at": "2018-02-23T21:30:14Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170372876",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170372876"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170372876"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170372876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 127,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170374101",
    "pull_request_review_id": 99057540,
    "id": 170374101,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3NDEwMQ==",
    "diff_hunk": "@@ -260,9 +260,14 @@ private void connectSocket(int connectTimeout, int readTimeout, Call call,\n \n   private void establishProtocol(ConnectionSpecSelector connectionSpecSelector,\n       int pingIntervalMillis, Call call, EventListener eventListener) throws IOException {\n-    if (route.address().sslSocketFactory() == null) {\n-      protocol = Protocol.HTTP_1_1;\n+    if (route.address().protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java",
    "position": null,
    "original_position": 6,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems like this check could be a subset of the \"if (route.address().sslSocketFactory() == null) \" case\r\n\r\nmeaning 0 cost in the more common https case, and clearer that this is a special case of clear text.  Thoughts?",
    "created_at": "2018-02-23T21:36:17Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170374101",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170374101"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170374101"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170374101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 263,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170374885",
    "pull_request_review_id": 99057540,
    "id": 170374885,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3NDg4NQ==",
    "diff_hunk": "@@ -844,15 +844,25 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      * HTTP/1.1} only. If the server responds with {@code HTTP/1.0}, that will be exposed by {@link\n      * Response#protocol()}.\n      *\n-     * @param protocols the protocols to use, in order of preference. The list must contain {@link\n-     * Protocol#HTTP_1_1}. It must not contain null or {@link Protocol#HTTP_1_0}.\n+     * @param protocols the protocols to use, in order of preference. If the list contains {@link",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 6,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could we reword this to start with the normal case of HTTP_1_1.  As it is has a very H2C centric view of the world.",
    "created_at": "2018-02-23T21:40:02Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170374885",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170374885"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170374885"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170374885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 847,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170375558",
    "pull_request_review_id": 99057540,
    "id": 170375558,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3NTU1OA==",
    "diff_hunk": "@@ -0,0 +1,1185 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.Cache;\n+import okhttp3.Call;\n+import okhttp3.Callback;\n+import okhttp3.Cookie;\n+import okhttp3.Credentials;\n+import okhttp3.Headers;\n+import okhttp3.Interceptor;\n+import okhttp3.MediaType;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import okhttp3.RecordingCookieJar;\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+import okhttp3.TestLogHandler;\n+import okhttp3.TestUtil;\n+import okhttp3.internal.DoubleInetAddressDns;\n+import okhttp3.internal.RecordingOkAuthenticator;\n+import okhttp3.internal.Util;\n+import okhttp3.internal.connection.RealConnection;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+import okhttp3.mockwebserver.PushPromise;\n+import okhttp3.mockwebserver.RecordedRequest;\n+import okhttp3.mockwebserver.SocketPolicy;\n+import okio.Buffer;\n+import okio.BufferedSink;\n+import okio.GzipSink;\n+import okio.Okio;\n+import org.junit.After;\n+import org.junit.Ignore;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.Authenticator;\n+import java.net.HttpURLConnection;\n+import java.net.SocketTimeoutException;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.SynchronousQueue;\n+import java.util.concurrent.TimeUnit;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Base test cases for HTTP2 communication. These tests are executed for both H2C and HTTP2\n+ * based requests. For implementation specific tests, include in the appropriate test case.\n+ *\n+ * This code originally lived in the HttpOverHttp2Test class, but was abstracted out for use",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2TestBase.java",
    "position": null,
    "original_position": 68,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this history is needed. We have git for that.",
    "created_at": "2018-02-23T21:43:01Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170375558",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170375558"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170375558"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170375558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170376938",
    "pull_request_review_id": 99063448,
    "id": 170376938,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3NjkzOA==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static okhttp3.TestUtil.defaultClient;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test H2C, the cleartext implementation of HTTP/2.\n+ *\n+ * @author jpitz\n+ */\n+@SuppressWarnings(\"Duplicates\")\n+public final class HttpOverH2CTest extends Http2TestBase {\n+  private static final List<Protocol> PROTOCOLS = Arrays.asList(Protocol.H2C);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    super.setUp(\n+      defaultClient().newBuilder()\n+          .protocols(PROTOCOLS)\n+          .build(),\n+      \"http\",\n+      Protocol.H2C\n+    );\n+    server.setProtocols(PROTOCOLS);\n+  }\n+\n+  @Test\n+  public void testProtocol() throws Exception {",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverH2CTest.java",
    "position": null,
    "original_position": 36,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It feels like these tests from here onwards would be more natural in ProtocolTest (new), MockWebserverTest and OkHttpClientTest.  Thoughts? ",
    "created_at": "2018-02-23T21:49:56Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170376938",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170376938"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170376938"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170376938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170377865",
    "pull_request_review_id": 99064550,
    "id": 170377865,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3Nzg2NQ==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static okhttp3.TestUtil.defaultClient;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test H2C, the cleartext implementation of HTTP/2.\n+ *\n+ * @author jpitz\n+ */\n+@SuppressWarnings(\"Duplicates\")\n+public final class HttpOverH2CTest extends Http2TestBase {\n+  private static final List<Protocol> PROTOCOLS = Arrays.asList(Protocol.H2C);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    super.setUp(",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverH2CTest.java",
    "position": null,
    "original_position": 25,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It feels like this could be handled without as much major surgery with a @Parameterized test.  Not sure which is generally favoured, but I try to avoid subclassing in case there is another dimension of freedom to the tests in the future e.g. Platform.\r\n\r\nBut interested to hear input from others and yours.",
    "created_at": "2018-02-23T21:54:27Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170377865",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170377865"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170377865"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170377865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170378275",
    "pull_request_review_id": 99065047,
    "id": 170378275,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM3ODI3NQ==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static okhttp3.TestUtil.defaultClient;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test H2C, the cleartext implementation of HTTP/2.\n+ *\n+ * @author jpitz\n+ */\n+@SuppressWarnings(\"Duplicates\")\n+public final class HttpOverH2CTest extends Http2TestBase {\n+  private static final List<Protocol> PROTOCOLS = Arrays.asList(Protocol.H2C);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    super.setUp(",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverH2CTest.java",
    "position": null,
    "original_position": 25,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It also means you can't go to a single test and run it from within Http2TestBase.",
    "created_at": "2018-02-23T21:56:23Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170378275",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170378275"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170378275"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170378275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 170377865
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170388378",
    "pull_request_review_id": 99077159,
    "id": 170388378,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM4ODM3OA==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static okhttp3.TestUtil.defaultClient;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test H2C, the cleartext implementation of HTTP/2.\n+ *\n+ * @author jpitz\n+ */\n+@SuppressWarnings(\"Duplicates\")\n+public final class HttpOverH2CTest extends Http2TestBase {\n+  private static final List<Protocol> PROTOCOLS = Arrays.asList(Protocol.H2C);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    super.setUp(\n+      defaultClient().newBuilder()\n+          .protocols(PROTOCOLS)\n+          .build(),\n+      \"http\",\n+      Protocol.H2C\n+    );\n+    server.setProtocols(PROTOCOLS);\n+  }\n+\n+  @Test\n+  public void testProtocol() throws Exception {",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverH2CTest.java",
    "position": null,
    "original_position": 36,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah. I looked for a ProtocolTest and there wasn't one. Didn't look again after handling the merge. I'll move them.",
    "created_at": "2018-02-23T22:54:21Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170388378",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170388378"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170388378"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170388378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 170376938
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170388521",
    "pull_request_review_id": 99077328,
    "id": 170388521,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM4ODUyMQ==",
    "diff_hunk": "@@ -844,15 +844,25 @@ public Builder dispatcher(Dispatcher dispatcher) {\n      * HTTP/1.1} only. If the server responds with {@code HTTP/1.0}, that will be exposed by {@link\n      * Response#protocol()}.\n      *\n-     * @param protocols the protocols to use, in order of preference. The list must contain {@link\n-     * Protocol#HTTP_1_1}. It must not contain null or {@link Protocol#HTTP_1_0}.\n+     * @param protocols the protocols to use, in order of preference. If the list contains {@link",
    "path": "okhttp/src/main/java/okhttp3/OkHttpClient.java",
    "position": null,
    "original_position": 6,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'll take another crack. I started trying to word it that way, but ran into issues with clarity.",
    "created_at": "2018-02-23T22:55:22Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170388521",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170388521"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170388521"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170388521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 847,
    "side": "RIGHT",
    "in_reply_to_id": 170374885
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170388901",
    "pull_request_review_id": 99077771,
    "id": 170388901,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM4ODkwMQ==",
    "diff_hunk": "@@ -124,6 +124,9 @@ public Http2Codec(OkHttpClient client, Interceptor.Chain chain, StreamAllocation\n   @Override public Response.Builder readResponseHeaders(boolean expectContinue) throws IOException {\n     List<Header> headers = stream.takeResponseHeaders();\n     Response.Builder responseBuilder = readHttp2HeadersList(headers);\n+    if (client.protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 4,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That method was `public static` and so I would need to thread the value through the method signature, causing a breaking API change.",
    "created_at": "2018-02-23T22:57:49Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170388901",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170388901"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170388901"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170388901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 127,
    "side": "RIGHT",
    "in_reply_to_id": 170372876
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170394758",
    "pull_request_review_id": 99084346,
    "id": 170394758,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM5NDc1OA==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+package okhttp3.internal.http2;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Protocol;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static okhttp3.TestUtil.defaultClient;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test H2C, the cleartext implementation of HTTP/2.\n+ *\n+ * @author jpitz\n+ */\n+@SuppressWarnings(\"Duplicates\")\n+public final class HttpOverH2CTest extends Http2TestBase {\n+  private static final List<Protocol> PROTOCOLS = Arrays.asList(Protocol.H2C);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    super.setUp(",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverH2CTest.java",
    "position": null,
    "original_position": 25,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Huh.. This week I learned. Didn't know about Parameterized builds in JUnit. This is exactly what I am looking for.",
    "created_at": "2018-02-23T23:39:51Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170394758",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170394758"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170394758"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170394758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 170377865
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170397322",
    "pull_request_review_id": 99087264,
    "id": 170397322,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM5NzMyMg==",
    "diff_hunk": "@@ -124,6 +124,9 @@ public Http2Codec(OkHttpClient client, Interceptor.Chain chain, StreamAllocation\n   @Override public Response.Builder readResponseHeaders(boolean expectContinue) throws IOException {\n     List<Header> headers = stream.takeResponseHeaders();\n     Response.Builder responseBuilder = readHttp2HeadersList(headers);\n+    if (client.protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 4,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This could actually be cached on the class. No need to do the linear scan all the time.",
    "created_at": "2018-02-24T00:02:37Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170397322",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170397322"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170397322"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170397322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 127,
    "side": "RIGHT",
    "in_reply_to_id": 170372876
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170398530",
    "pull_request_review_id": 99088684,
    "id": 170398530,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDM5ODUzMA==",
    "diff_hunk": "@@ -124,6 +124,9 @@ public Http2Codec(OkHttpClient client, Interceptor.Chain chain, StreamAllocation\n   @Override public Response.Builder readResponseHeaders(boolean expectContinue) throws IOException {\n     List<Header> headers = stream.takeResponseHeaders();\n     Response.Builder responseBuilder = readHttp2HeadersList(headers);\n+    if (client.protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 4,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "e2292c9b1d465794aeb0202da13a63f468ce8e79",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Alternatively, another attribute could be added to the OkHttpClient and that can be a cached referenced for the lifetime of the client\r\n\r\n",
    "created_at": "2018-02-24T00:14:38Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170398530",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170398530"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170398530"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170398530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 127,
    "side": "RIGHT",
    "in_reply_to_id": 170372876
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170414561",
    "pull_request_review_id": 99105790,
    "id": 170414561,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQxNDU2MQ==",
    "diff_hunk": "@@ -1147,6 +1182,8 @@ private int countFrames(List<String> logs, String message) {\n    * <p>This test uses proxy tunnels to get a hook while a connection is being established.\n    */\n   @Test public void concurrentHttp2ConnectionsDeduplicated() throws Exception {\n+    if (protocol == Protocol.H2C) return; // skip",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 154,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5a26ae2490f7fa3f6c4d8433a466b9ab067e683e",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: using Assume is clearer in IDEs that it isn't running.   ",
    "created_at": "2018-02-24T07:33:37Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170414561",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170414561"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170414561"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170414561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1185,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170414665",
    "pull_request_review_id": 99105910,
    "id": 170414665,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQxNDY2NQ==",
    "diff_hunk": "@@ -90,13 +90,17 @@\n   final StreamAllocation streamAllocation;\n   private final Http2Connection connection;\n   private Http2Stream stream;\n+  private final boolean useH2C;",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 4,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5a26ae2490f7fa3f6c4d8433a466b9ab067e683e",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: seems clearer to just assign the Protocol here (HTTP_2 or H2C) and just pass in as a param to readHttp2HeadersList, instead of setting HTTP_2 and then based on this boolean overriding the value.",
    "created_at": "2018-02-24T07:38:37Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170414665",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170414665"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170414665"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170414665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170427484",
    "pull_request_review_id": 99118667,
    "id": 170427484,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQyNzQ4NA==",
    "diff_hunk": "@@ -0,0 +1,34 @@\n+package okhttp3;\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ProtocolTest {\n+    @Test\n+    public void testGetKnown() throws IOException {\n+        assertEquals(Protocol.HTTP_1_0, Protocol.get(\"http/1.0\"));\n+        assertEquals(Protocol.HTTP_1_1, Protocol.get(\"http/1.1\"));\n+        assertEquals(Protocol.SPDY_3, Protocol.get(\"spdy/3.1\"));\n+        assertEquals(Protocol.HTTP_2, Protocol.get(\"h2\"));\n+        assertEquals(Protocol.H2C, Protocol.get(\"h2c\"));\n+        assertEquals(Protocol.QUIC, Protocol.get(\"quic\"));\n+    }\n+\n+    @Test(expected = IOException.class)",
    "path": "okhttp-tests/src/test/java/okhttp3/ProtocolTest.java",
    "position": null,
    "original_position": 20,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "b09fdbdf47f84dc3c784fd0d11303b55d62417c9",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I expect (no pun intended) Jesse will ask you to turn this into \r\n\r\n```\r\ntry {\r\n  X; \r\n  fail();\r\n} catch (IOException expected) { \r\nassertEquals(\"xxxx\", expected.getMessage()); \r\n}\r\n```",
    "created_at": "2018-02-24T17:52:22Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170427484",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170427484"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170427484"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170427484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170427648",
    "pull_request_review_id": 99118859,
    "id": 170427648,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQyNzY0OA==",
    "diff_hunk": "@@ -169,4 +169,30 @@\n       assertEquals(\"Null network interceptor: [null]\", expected.getMessage());\n     }\n   }\n+\n+  @Test(expected = IllegalArgumentException.class)\n+  public void testH2COkHttpClientConstructionFallback() {\n+    // fallbacks are not allowed when using h2c prior knowledge\n+    new OkHttpClient.Builder()\n+            .protocols(Arrays.asList(Protocol.H2C, Protocol.HTTP_1_1))\n+            .build();\n+  }\n+\n+",
    "path": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java",
    "position": null,
    "original_position": 13,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "11f464648b1a364ecd8be7dcfc26500f8ecdca60",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: double line",
    "created_at": "2018-02-24T17:58:52Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170427648",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170427648"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170427648"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170427648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 181,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170427659",
    "pull_request_review_id": 99118876,
    "id": 170427659,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQyNzY1OQ==",
    "diff_hunk": "@@ -86,28 +89,60 @@\n import static org.junit.Assert.fail;\n \n /** Test how SPDY interacts with HTTP/2 features. */\n+@RunWith(Parameterized.class)\n public final class HttpOverHttp2Test {\n   private static final Logger http2Logger = Logger.getLogger(Http2.class.getName());\n+  private static final SslClient sslClient = SslClient.localhost();\n+\n+  @Parameters\n+  public static Collection<Object[]> data() {\n+\n+      return Arrays.asList(new Object[][] {",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 38,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "11f464648b1a364ecd8be7dcfc26500f8ecdca60",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "indentation looks off",
    "created_at": "2018-02-24T17:59:25Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170427659",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170427659"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170427659"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170427659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 100,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170430537",
    "pull_request_review_id": 99121454,
    "id": 170430537,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzMDUzNw==",
    "diff_hunk": "@@ -456,4 +457,22 @@\n     RecordedRequest request = server.takeRequest();\n     assertEquals(\"request\", request.getBody().readUtf8());\n   }\n+\n+  @Test(expected = IllegalArgumentException.class)",
    "path": "mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java",
    "position": null,
    "original_position": 13,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "a9e5456084cc8db2078ba5fc7ce6cc94ca30d3c2",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same as previous comment, OkHttp tests favour explicit catch and check exception message over annotation expected tests.",
    "created_at": "2018-02-24T19:45:41Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170430537",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170430537"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170430537"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170430537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 461,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438913",
    "pull_request_review_id": 99129558,
    "id": 170438913,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODkxMw==",
    "diff_hunk": "@@ -420,7 +428,7 @@ public void processConnection() throws Exception {\n             return;\n           }\n           socket = sslSocketFactory.createSocket(raw, raw.getInetAddress().getHostAddress(),\n-              raw.getPort(), true);\n+                  raw.getPort(), true);",
    "path": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java",
    "position": null,
    "original_position": 29,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: indent",
    "created_at": "2018-02-25T02:06:44Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438913",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438913"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438913"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 431,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438917",
    "pull_request_review_id": 99129558,
    "id": 170438917,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODkxNw==",
    "diff_hunk": "@@ -436,6 +444,10 @@ public void processConnection() throws Exception {\n             protocol = protocolString != null ? Protocol.get(protocolString) : Protocol.HTTP_1_1;\n           }\n           openClientSockets.remove(raw);\n+        } else if (protocols.contains(Protocol.H2C)) {\n+          // force use of H2c",
    "path": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java",
    "position": null,
    "original_position": 38,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I don’t think the comment is necessary!",
    "created_at": "2018-02-25T02:07:01Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438917",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438917"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438917"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 448,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438933",
    "pull_request_review_id": 99129558,
    "id": 170438933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODkzMw==",
    "diff_hunk": "@@ -169,4 +169,35 @@\n       assertEquals(\"Null network interceptor: [null]\", expected.getMessage());\n     }\n   }\n+\n+  @Test public void testH2COkHttpClientConstructionFallback() {\n+    // fallbacks are not allowed when using h2c prior knowledge\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.HTTP_1_1));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {\n+      assertEquals(\"protocols containing h2c cannot use other protocols: [h2c, http/1.1]\", e.getMessage());\n+    }\n+  }\n+\n+  @Test public void testH2COkHttpClientConstructionDuplicates() {\n+    // Treating this use case as user error\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.H2C));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {\n+      assertEquals(\"protocols containing h2c cannot use other protocols: [h2c, h2c]\", e.getMessage());\n+    }\n+  }\n+\n+  @Test public void testH2COkHttpClientConstructionSuccess() {",
    "path": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java",
    "position": null,
    "original_position": 27,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nice.",
    "created_at": "2018-02-25T02:07:44Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438933",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438933"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 195,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438939",
    "pull_request_review_id": 99129558,
    "id": 170438939,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODkzOQ==",
    "diff_hunk": "@@ -169,4 +169,35 @@\n       assertEquals(\"Null network interceptor: [null]\", expected.getMessage());\n     }\n   }\n+\n+  @Test public void testH2COkHttpClientConstructionFallback() {\n+    // fallbacks are not allowed when using h2c prior knowledge\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.HTTP_1_1));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {\n+      assertEquals(\"protocols containing h2c cannot use other protocols: [h2c, http/1.1]\", e.getMessage());\n+    }\n+  }\n+\n+  @Test public void testH2COkHttpClientConstructionDuplicates() {\n+    // Treating this use case as user error\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.H2C));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {\n+      assertEquals(\"protocols containing h2c cannot use other protocols: [h2c, h2c]\", e.getMessage());\n+    }\n+  }\n+\n+  @Test public void testH2COkHttpClientConstructionSuccess() {\n+    final OkHttpClient okHttpClient = new OkHttpClient.Builder()",
    "path": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java",
    "position": null,
    "original_position": 28,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `final` isn’t necessary",
    "created_at": "2018-02-25T02:07:54Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438939",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438939"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438939"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 196,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438943",
    "pull_request_review_id": 99129558,
    "id": 170438943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODk0Mw==",
    "diff_hunk": "@@ -0,0 +1,34 @@\n+package okhttp3;",
    "path": "okhttp-tests/src/test/java/okhttp3/ProtocolTest.java",
    "position": 16,
    "original_position": 1,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: copyright header",
    "created_at": "2018-02-25T02:08:06Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438943",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438943"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 16,
    "original_line": 1,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438951",
    "pull_request_review_id": 99129558,
    "id": 170438951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODk1MQ==",
    "diff_hunk": "@@ -0,0 +1,34 @@\n+package okhttp3;\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ProtocolTest {\n+    @Test\n+    public void testGetKnown() throws IOException {\n+        assertEquals(Protocol.HTTP_1_0, Protocol.get(\"http/1.0\"));\n+        assertEquals(Protocol.HTTP_1_1, Protocol.get(\"http/1.1\"));\n+        assertEquals(Protocol.SPDY_3, Protocol.get(\"spdy/3.1\"));\n+        assertEquals(Protocol.HTTP_2, Protocol.get(\"h2\"));\n+        assertEquals(Protocol.H2C, Protocol.get(\"h2c\"));\n+        assertEquals(Protocol.QUIC, Protocol.get(\"quic\"));\n+    }\n+\n+    @Test(expected = IOException.class)",
    "path": "okhttp-tests/src/test/java/okhttp3/ProtocolTest.java",
    "position": null,
    "original_position": 20,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "b09fdbdf47f84dc3c784fd0d11303b55d62417c9",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes please.",
    "created_at": "2018-02-25T02:08:27Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438951",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438951"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT",
    "in_reply_to_id": 170427484
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438980",
    "pull_request_review_id": 99129558,
    "id": 170438980,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODk4MA==",
    "diff_hunk": "@@ -0,0 +1,34 @@\n+package okhttp3;\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ProtocolTest {",
    "path": "okhttp-tests/src/test/java/okhttp3/ProtocolTest.java",
    "position": 24,
    "original_position": 9,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: 2-space indent please",
    "created_at": "2018-02-25T02:08:48Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438980",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438980"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438980"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 9,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438984",
    "pull_request_review_id": 99129558,
    "id": 170438984,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODk4NA==",
    "diff_hunk": "@@ -86,28 +89,61 @@\n import static org.junit.Assert.fail;\n \n /** Test how SPDY interacts with HTTP/2 features. */\n+@RunWith(Parameterized.class)\n public final class HttpOverHttp2Test {\n   private static final Logger http2Logger = Logger.getLogger(Http2.class.getName());\n+  private static final SslClient sslClient = SslClient.localhost();\n+\n+  @Parameters",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 35,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "neat",
    "created_at": "2018-02-25T02:09:04Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438984",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438984"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438984"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 97,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438998",
    "pull_request_review_id": 99129558,
    "id": 170438998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzODk5OA==",
    "diff_hunk": "@@ -1147,6 +1183,8 @@ private int countFrames(List<String> logs, String message) {\n    * <p>This test uses proxy tunnels to get a hook while a connection is being established.\n    */\n   @Test public void concurrentHttp2ConnectionsDeduplicated() throws Exception {\n+    if (protocol == Protocol.H2C) return; // only run for http2",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 155,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yeah, I think you want assumeTrue() here",
    "created_at": "2018-02-25T02:10:14Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170438998",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170438998"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170438998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170438998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1186,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439011",
    "pull_request_review_id": 99129558,
    "id": 170439011,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzOTAxMQ==",
    "diff_hunk": "@@ -261,8 +261,15 @@ private void connectSocket(int connectTimeout, int readTimeout, Call call,\n   private void establishProtocol(ConnectionSpecSelector connectionSpecSelector,\n       int pingIntervalMillis, Call call, EventListener eventListener) throws IOException {\n     if (route.address().sslSocketFactory() == null) {\n-      protocol = Protocol.HTTP_1_1;\n+      if (route.address().protocols().contains(Protocol.H2C)) {",
    "path": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java",
    "position": 5,
    "original_position": 5,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nice",
    "created_at": "2018-02-25T02:10:56Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170439011",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170439011"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170439011"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 264,
    "original_line": 264,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439017",
    "pull_request_review_id": 99129558,
    "id": 170439017,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzOTAxNw==",
    "diff_hunk": "@@ -271,16 +278,20 @@ private void establishProtocol(ConnectionSpecSelector connectionSpecSelector,\n     eventListener.secureConnectEnd(call, handshake);\n \n     if (protocol == Protocol.HTTP_2) {\n-      socket.setSoTimeout(0); // HTTP/2 connection timeouts are set per-stream.\n-      http2Connection = new Http2Connection.Builder(true)\n-          .socket(socket, route.address().url().host(), source, sink)\n-          .listener(this)\n-          .pingIntervalMillis(pingIntervalMillis)\n-          .build();\n-      http2Connection.start();\n+      startHttp2(pingIntervalMillis);\n     }\n   }\n \n+  private void startHttp2(int pingIntervalMillis) throws IOException {\n+    socket.setSoTimeout(0); // HTTP/2 connection timeouts are set per-stream.\n+    http2Connection = new Http2Connection.Builder(true)\n+            .socket(socket, route.address().url().host(), source, sink)",
    "path": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java",
    "position": null,
    "original_position": 35,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "supernit: +4 on wrapped lines",
    "created_at": "2018-02-25T02:11:14Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170439017",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170439017"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170439017"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 288,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439038",
    "pull_request_review_id": 99129558,
    "id": 170439038,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzOTAzOA==",
    "diff_hunk": "@@ -90,13 +90,17 @@\n   final StreamAllocation streamAllocation;\n   private final Http2Connection connection;\n   private Http2Stream stream;\n+  private final Protocol protocol;\n \n   public Http2Codec(OkHttpClient client, Interceptor.Chain chain, StreamAllocation streamAllocation,\n       Http2Connection connection) {\n     this.client = client;\n     this.chain = chain;\n     this.streamAllocation = streamAllocation;\n     this.connection = connection;\n+\n+    // cache this so we don't do linear scans on every call",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 13,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this comment is misleading. “linear scans” is on a list of a very small constant size. ",
    "created_at": "2018-02-25T02:12:25Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170439038",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170439038"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170439038"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439042",
    "pull_request_review_id": 99129558,
    "id": 170439042,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQzOTA0Mg==",
    "diff_hunk": "@@ -90,13 +90,17 @@\n   final StreamAllocation streamAllocation;\n   private final Http2Connection connection;\n   private Http2Stream stream;\n+  private final Protocol protocol;\n \n   public Http2Codec(OkHttpClient client, Interceptor.Chain chain, StreamAllocation streamAllocation,\n       Http2Connection connection) {\n     this.client = client;\n     this.chain = chain;\n     this.streamAllocation = streamAllocation;\n     this.connection = connection;\n+\n+    // cache this so we don't do linear scans on every call",
    "path": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java",
    "position": null,
    "original_position": 13,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(I think I’d just omit the comment) ",
    "created_at": "2018-02-25T02:12:57Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170439042",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170439042"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170439042"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170439042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT",
    "in_reply_to_id": 170439038
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170444065",
    "pull_request_review_id": 99134092,
    "id": 170444065,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ0NDA2NQ==",
    "diff_hunk": "@@ -86,28 +89,61 @@\n import static org.junit.Assert.fail;\n \n /** Test how SPDY interacts with HTTP/2 features. */\n+@RunWith(Parameterized.class)\n public final class HttpOverHttp2Test {\n   private static final Logger http2Logger = Logger.getLogger(Http2.class.getName());\n+  private static final SslClient sslClient = SslClient.localhost();\n+\n+  @Parameters",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 35,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you change this so the IDE makes it clear what is running\r\n\r\n`  @Parameters(name=\"{2}\")`\r\n\r\n![image](https://user-images.githubusercontent.com/231923/36639094-f336ef8c-19fb-11e8-8f44-ec134c5776ba.png)\r\n",
    "created_at": "2018-02-25T07:17:37Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170444065",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170444065"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170444065"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170444065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 97,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170450656",
    "pull_request_review_id": 99140752,
    "id": 170450656,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1MDY1Ng==",
    "diff_hunk": "@@ -169,4 +169,35 @@\n       assertEquals(\"Null network interceptor: [null]\", expected.getMessage());\n     }\n   }\n+\n+  @Test public void testH2COkHttpClientConstructionFallback() {\n+    // fallbacks are not allowed when using h2c prior knowledge\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.HTTP_1_1));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {\n+      assertEquals(\"protocols containing h2c cannot use other protocols: [h2c, http/1.1]\", e.getMessage());\n+    }\n+  }\n+\n+  @Test public void testH2COkHttpClientConstructionDuplicates() {\n+    // Treating this use case as user error\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.H2C));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {\n+      assertEquals(\"protocols containing h2c cannot use other protocols: [h2c, h2c]\", e.getMessage());\n+    }\n+  }\n+\n+  @Test public void testH2COkHttpClientConstructionSuccess() {\n+    final OkHttpClient okHttpClient = new OkHttpClient.Builder()",
    "path": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java",
    "position": null,
    "original_position": 28,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "habbit. we prefer having every thing be final.",
    "created_at": "2018-02-25T11:57:53Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170450656",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170450656"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170450656"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170450656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 196,
    "side": "RIGHT",
    "in_reply_to_id": 170438939
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170451301",
    "pull_request_review_id": 99141352,
    "id": 170451301,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1MTMwMQ==",
    "diff_hunk": "@@ -0,0 +1,34 @@\n+package okhttp3;",
    "path": "okhttp-tests/src/test/java/okhttp3/ProtocolTest.java",
    "position": 16,
    "original_position": 1,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added",
    "created_at": "2018-02-25T12:24:04Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170451301",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170451301"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170451301"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170451301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 16,
    "original_line": 1,
    "side": "RIGHT",
    "in_reply_to_id": 170438943
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170451308",
    "pull_request_review_id": 99141358,
    "id": 170451308,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1MTMwOA==",
    "diff_hunk": "@@ -0,0 +1,34 @@\n+package okhttp3;\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ProtocolTest {",
    "path": "okhttp-tests/src/test/java/okhttp3/ProtocolTest.java",
    "position": 24,
    "original_position": 9,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "5b47c9d76967b38f21c3e6fc176164788a15f7ec",
    "user": {
      "login": "mjpitz",
      "id": 690578,
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjpitz",
      "html_url": "https://github.com/mjpitz",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2018-02-25T12:24:10Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170451308",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170451308"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170451308"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170451308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 9,
    "side": "RIGHT",
    "in_reply_to_id": 170438980
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170452174",
    "pull_request_review_id": 99142175,
    "id": 170452174,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1MjE3NA==",
    "diff_hunk": "@@ -84,30 +87,64 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertThat;\n import static org.junit.Assert.fail;\n+import static org.junit.Assume.assumeTrue;\n \n /** Test how SPDY interacts with HTTP/2 features. */\n+@RunWith(Parameterized.class)\n public final class HttpOverHttp2Test {\n   private static final Logger http2Logger = Logger.getLogger(Http2.class.getName());\n+  private static final SslClient sslClient = SslClient.localhost();\n+\n+  @Parameters(name = \"{2}\")\n+  public static Collection<Object[]> data() {",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 39,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "7817792e3f4aa01f640c36918e6589760f042a11",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This makes the client instances used across test runs.  Can we change this to\r\n\r\n```\r\n@Parameters(name = \"{0}\") \r\npublic static Collection<Protocol> data() {\r\n   return Arrays.asList(Protocol.H2C, Protocol.HTTP_2);\r\n}\r\n```",
    "created_at": "2018-02-25T12:56:57Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170452174",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170452174"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170452174"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170452174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 99,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170452205",
    "pull_request_review_id": 99142175,
    "id": 170452205,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1MjIwNQ==",
    "diff_hunk": "@@ -84,30 +87,64 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertThat;\n import static org.junit.Assert.fail;\n+import static org.junit.Assume.assumeTrue;\n \n /** Test how SPDY interacts with HTTP/2 features. */\n+@RunWith(Parameterized.class)\n public final class HttpOverHttp2Test {\n   private static final Logger http2Logger = Logger.getLogger(Http2.class.getName());\n+  private static final SslClient sslClient = SslClient.localhost();\n+\n+  @Parameters(name = \"{2}\")\n+  public static Collection<Object[]> data() {\n+    return Arrays.asList(new Object[][] {\n+        // H2C\n+        {\n+            defaultClient().newBuilder()\n+                .protocols(Arrays.asList(Protocol.H2C))\n+                .build(),\n+            \"http\",\n+            Protocol.H2C\n+        },\n+\n+        // HTTP_2\n+        {\n+            defaultClient().newBuilder()\n+                .protocols(Arrays.asList(Protocol.HTTP_2, Protocol.HTTP_1_1))\n+                .dns(new SingleInetAddressDns())\n+                .sslSocketFactory(sslClient.socketFactory, sslClient.trustManager)\n+                .hostnameVerifier(new RecordingHostnameVerifier())\n+                .build(),\n+            \"https\",\n+            Protocol.HTTP_2\n+        }\n+    });\n+  }\n \n   @Rule public final TemporaryFolder tempDir = new TemporaryFolder();\n   @Rule public final MockWebServer server = new MockWebServer();\n \n-  private SslClient sslClient = SslClient.localhost();\n-  private HostnameVerifier hostnameVerifier = new RecordingHostnameVerifier();\n   private OkHttpClient client;\n   private Cache cache;\n   private TestLogHandler http2Handler = new TestLogHandler();\n   private Level previousLevel;\n+  private String scheme;\n+  private Protocol protocol;\n+\n+  public HttpOverHttp2Test(OkHttpClient client, String scheme, Protocol protocol) {",
    "path": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java",
    "position": null,
    "original_position": 76,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "7817792e3f4aa01f640c36918e6589760f042a11",
    "user": {
      "login": "yschimke",
      "id": 231923,
      "node_id": "MDQ6VXNlcjIzMTkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yschimke",
      "html_url": "https://github.com/yschimke",
      "followers_url": "https://api.github.com/users/yschimke/followers",
      "following_url": "https://api.github.com/users/yschimke/following{/other_user}",
      "gists_url": "https://api.github.com/users/yschimke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yschimke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yschimke/subscriptions",
      "organizations_url": "https://api.github.com/users/yschimke/orgs",
      "repos_url": "https://api.github.com/users/yschimke/repos",
      "events_url": "https://api.github.com/users/yschimke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yschimke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n  public HttpOverHttp2Test(Protocol protocol) {\r\n    this.protocol = protocol;\r\n    this.client = protocol == Protocol.HTTP_2 ? buildClient() : buildH2cClient();\r\n    this.scheme = protocol == Protocol.HTTP_2 ? \"https\" : \"http\";\r\n  }\r\n\r\n  private static OkHttpClient buildH2cClient() {\r\n    return defaultClient().newBuilder()\r\n        .connectionPool(new ConnectionPool())\r\n        .protocols(Arrays.asList(Protocol.H2C))\r\n        .build();\r\n  }\r\n\r\n  private static OkHttpClient buildClient() {\r\n    return defaultClient().newBuilder()\r\n        .protocols(Arrays.asList(Protocol.HTTP_2, Protocol.HTTP_1_1))\r\n        .dns(new SingleInetAddressDns())\r\n        .sslSocketFactory(sslClient.socketFactory, sslClient.trustManager)\r\n        .hostnameVerifier(new RecordingHostnameVerifier())\r\n        .connectionPool(new ConnectionPool())\r\n        .build();\r\n  }\r\n```\r\n\r\nthen in tear down\r\n\r\n```\r\n  @After public void tearDown() throws Exception {\r\n    Authenticator.setDefault(null);\r\n    http2Logger.removeHandler(http2Handler);\r\n    http2Logger.setLevel(previousLevel);\r\n\r\n    client.connectionPool().evictAll();\r\n  }\r\n```",
    "created_at": "2018-02-25T12:58:14Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170452205",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "COLLABORATOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170452205"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170452205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170452205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 134,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170459987",
    "pull_request_review_id": 99149665,
    "id": 170459987,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1OTk4Nw==",
    "diff_hunk": "@@ -223,6 +227,10 @@ public void setProtocols(List<Protocol> protocols) {\n     this.protocols = protocols;\n   }\n \n+  public List<Protocol> protocols() {\n+    return Collections.unmodifiableList(protocols);",
    "path": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java",
    "position": null,
    "original_position": 18,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "af1ac8969a7b1fcf5a645457fc9864d5e3f42bfa",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "when we set the protocols we call `Util.immutableList()` so I think unmodifiableList() is not necessary",
    "created_at": "2018-02-25T17:29:47Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170459987",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170459987"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170459987"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170459987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170459996",
    "pull_request_review_id": 99149665,
    "id": 170459996,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1OTk5Ng==",
    "diff_hunk": "@@ -169,4 +169,35 @@\n       assertEquals(\"Null network interceptor: [null]\", expected.getMessage());\n     }\n   }\n+\n+  @Test public void testH2COkHttpClientConstructionFallback() {\n+    // fallbacks are not allowed when using h2c prior knowledge\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.HTTP_1_1));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {",
    "path": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java",
    "position": null,
    "original_position": 11,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "af1ac8969a7b1fcf5a645457fc9864d5e3f42bfa",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: more finals",
    "created_at": "2018-02-25T17:30:08Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170459996",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170459996"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170459996"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170459996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 179,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170459999",
    "pull_request_review_id": 99149665,
    "id": 170459999,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDQ1OTk5OQ==",
    "diff_hunk": "@@ -169,4 +169,35 @@\n       assertEquals(\"Null network interceptor: [null]\", expected.getMessage());\n     }\n   }\n+\n+  @Test public void testH2COkHttpClientConstructionFallback() {\n+    // fallbacks are not allowed when using h2c prior knowledge\n+    try {\n+      new OkHttpClient.Builder()\n+              .protocols(Arrays.asList(Protocol.H2C, Protocol.HTTP_1_1));\n+      fail(\"When H2C is specified, no other protocol can be specified\");\n+    } catch (final IllegalArgumentException e) {",
    "path": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java",
    "position": null,
    "original_position": 11,
    "commit_id": "76ba28b96d4c1a363f13276ad86d03d9f32ee3b4",
    "original_commit_id": "af1ac8969a7b1fcf5a645457fc9864d5e3f42bfa",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "also I really like `expected` instead of `e` for these",
    "created_at": "2018-02-25T17:30:19Z",
    "updated_at": "2018-02-26T20:50:24Z",
    "html_url": "https://github.com/square/okhttp/pull/3873#discussion_r170459999",
    "pull_request_url": "https://api.github.com/repos/square/okhttp/pulls/3873",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/comments/170459999"
      },
      "html": {
        "href": "https://github.com/square/okhttp/pull/3873#discussion_r170459999"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/square/okhttp/pulls/3873"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/square/okhttp/pulls/comments/170459999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 179,
    "side": "RIGHT",
    "in_reply_to_id": 170459996
  }
]