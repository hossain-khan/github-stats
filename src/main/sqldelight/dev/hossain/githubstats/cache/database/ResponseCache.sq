-- Response cache table for storing GitHub API responses in PostgreSQL
-- Uses JSONB for efficient storage and querying of JSON data
-- https://www.postgresql.org/docs/current/datatype-json.html

CREATE TABLE IF NOT EXISTS response_cache (
  id SERIAL PRIMARY KEY,
  cache_key TEXT NOT NULL UNIQUE,
  response_data JSONB NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  expires_at TIMESTAMP WITH TIME ZONE,
  request_url TEXT NOT NULL,
  http_status INTEGER NOT NULL DEFAULT 200
);

-- Index for fast lookups by cache key
CREATE INDEX IF NOT EXISTS idx_response_cache_key ON response_cache(cache_key);

-- Index for cleanup of expired entries
CREATE INDEX IF NOT EXISTS idx_response_cache_expires ON response_cache(expires_at);

-- Index for querying by URL pattern
CREATE INDEX IF NOT EXISTS idx_response_cache_url ON response_cache(request_url);

-- Queries for cache operations

insertOrReplaceResponse:
INSERT INTO response_cache (cache_key, response_data, request_url, http_status, expires_at)
VALUES (?, ?, ?, ?, ?)
ON CONFLICT (cache_key) 
DO UPDATE SET 
    response_data = EXCLUDED.response_data,
    created_at = CURRENT_TIMESTAMP,
    expires_at = EXCLUDED.expires_at,
    request_url = EXCLUDED.request_url,
    http_status = EXCLUDED.http_status;

getCachedResponse:
SELECT cache_key, response_data, created_at, expires_at, request_url, http_status
FROM response_cache 
WHERE cache_key = ? 
  AND (expires_at IS NULL OR expires_at > CURRENT_TIMESTAMP);

deleteCachedResponse:
DELETE FROM response_cache WHERE cache_key = ?;

deleteExpiredResponses:
DELETE FROM response_cache WHERE expires_at IS NOT NULL AND expires_at <= CURRENT_TIMESTAMP;

getAllCachedResponses:
SELECT cache_key, response_data, created_at, expires_at, request_url, http_status
FROM response_cache 
WHERE expires_at IS NULL OR expires_at > CURRENT_TIMESTAMP
ORDER BY created_at DESC;

getCacheStats:
SELECT 
  COUNT(*) AS total_entries,
  COUNT(CASE WHEN expires_at IS NULL OR expires_at > CURRENT_TIMESTAMP THEN 1 END) AS valid_entries,
  COUNT(CASE WHEN expires_at IS NOT NULL AND expires_at <= CURRENT_TIMESTAMP THEN 1 END) AS expired_entries
FROM response_cache;