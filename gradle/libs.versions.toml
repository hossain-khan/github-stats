[versions]
kotlin = "1.9.23"
jetbrainsCompose = "1.6.2"
androidGradlePlugin = "8.2.0" # Please use your project's target AGP version
kotlinter = "5.1.0"
dokka = "1.9.20"
kotlinxCoroutines = "1.8.0" # Stable version for Kotlin 1.9.x
kotlinxDatetime = "0.6.2"
okhttp = "4.12.0"
koin = "3.5.6" # Koin BOM for KMP compatibility
mockk = "1.13.12" # KMP compatible version
ktor = "2.3.12" # Example for Ktor, if used
kotlinxSerializationJson = "1.7.0" # Example for kotlinx-serialization, if used
androidxCoreKtx = "1.13.1" # Example for Android specific dependency

[libraries]
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
squareup-okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
squareup-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
squareup-okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Koin: using koin-bom is recommended. Add implementation(platform(libs.koin.bom)) in build.gradle.kts's commonMain dependencies.
# Then, add specific Koin artifacts without versions, like: implementation(libs.koin.core)
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" } # Version managed by koin-bom
# koin-android = { module = "io.insert-koin:koin-android" } # Example for Android specific Koin component
# koin-compose = { module = "io.insert-koin:koin-compose" } # Example for Koin integration with Jetpack/JetBrains Compose

mockk-common = { module = "io.mockk:mockk-common", version.ref = "mockk" }
# For JVM tests that need mockk-agent-jvm: testImplementation("io.mockk:mockk-agent-jvm:${libs.versions.mockk.get()}")

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreKtx"}

# Ktor (examples, if migrating from Retrofit)
# ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor"}
# ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor"} # OkHttp engine for Ktor
# ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor"} # For iOS native networking
# ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor"} # For JVM (alternative to OkHttp engine)
# ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
# ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Kotlinx Serialization (examples, if migrating from Moshi)
# kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson"}

[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
androidApplication = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" } # Added for KMP Android target
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "jetbrainsCompose" } # JetBrains Compose Plugin for KMP
# kotlinComposeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" } # Compose compiler, usually included by org.jetbrains.compose
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" } # If using kotlinx-serialization for JSON
